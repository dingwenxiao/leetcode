/*299 best solution in discussion, 2ms
 *
 */
public class Solution {
    public String getHint(String secret, String guess) {
        char[] s = secret.toCharArray();
        char[] g = guess.toCharArray();
        int bulls = 0;
        int cows = 0;
        int[] bucket = new int[10];
        for(int i=0;i<s.length;i++) {
            if(s[i]==g[i]) {
                bulls++;
            } else {
               if(bucket[s[i]-'0']>0) cows++;
               if(bucket[g[i]-'0']<0) cows++;
               bucket[s[i]-'0']--;
               bucket[g[i]-'0']++;
            }
        }
        return bulls+"A"+cows+"B";
    }
}

/*my solution: set+map, 25ms
 *
 */
public class Solution {
    public String getHint(String secret, String guess) {
        Map<Character,Integer> map = new HashMap<>();
        Set<Integer> posSet = new HashSet<>();
        
        char[] s = secret.toCharArray();
        char[] g = guess.toCharArray();
        int A = 0;
        int B = 0;
        
        for(int i=0;i<s.length;i++) {
            if(s[i]==g[i]) {
                A++;
                posSet.add(i);
            } else {
                map.put(s[i],map.getOrDefault(s[i], 0)+1);
            }
        }
        
        for(int j=0;j<g.length;j++) {
            if(posSet.contains(j)) continue;
            if(map.containsKey(g[j]) && map.get(g[j])>0) {
                map.put(g[j],map.get(g[j])-1);
                B++;
            }
        }
        
        return A+"A"+B+"B";
    }
}