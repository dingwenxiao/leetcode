/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */

/**
 * 113. Path Sum II, 
 *  3ms, simpler and quicker than that in discussion. 
 *
 */
public class Solution {
   List<List<Integer>> list = new ArrayList<>();

   public List<List<Integer>> pathSum(TreeNode root, int sum) {
        if(root == null) return list;
        find(root,sum,new ArrayList<Integer>());
        return list;
    }
    
    private void find(TreeNode root, int rest, List<Integer> current) {
       if(root!=null) {
           if(root.left==null && root.right==null) {
                if(root.val==rest) {
                    current.add(root.val);
                    list.add(new ArrayList<Integer>(current));
                    current.remove(current.size()-1);
                }
           } 
               current.add(root.val);
                find(root.left,rest-root.val,current);
                find(root.right,rest-root.val,current);
               current.remove(current.size()-1);
       }
    }
}