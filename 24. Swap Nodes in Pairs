/**24. Swap Nodes in Pairs recursion
 *   like the move forward question, you can use recursion
 *
 *
 */
public class Solution {
    public ListNode swapPairs(ListNode head) {
       if(head==null || head.next==null) return head;
       
       ListNode p = head.next;
       head.next = swapPairs(head.next.next);
       p.next = head;
       return p;
    }
}


/**
 * Two pointer solution
 *
 *
 */
public class Solution {
    public ListNode swapPairs(ListNode head) {
        if(head==null) return null;
        
        ListNode newHead = new ListNode(0);
        ListNode p1 = newHead;
        newHead.next = head;
        ListNode p2 = p1.next;
        while(p2!=null && p2.next!=null) {
            p1.next = p2.next;
            p2.next = p2.next.next;
            p1.next.next = p2;
            p1 = p2;
            p2 = p1.next;
        }
        
        return newHead.next;
    }
}